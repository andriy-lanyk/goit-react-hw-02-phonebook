{"version":3,"sources":["App/App.js","index.js"],"names":["App","state","contacts","id","name","number","filter","getValue","e","target","setState","prevState","value","getContact","preventDefault","doubleContact","find","item","alert","push","uuidv4","resetState","deleteContact","contactId","this","normalizedFilter","toLowerCase","visibleContacts","contact","includes","onSubmit","type","pattern","title","required","onChange","map","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA0HeA,E,4MAtHbC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDC,OAAQ,GACRF,KAAM,GACNC,OAAQ,I,EAGVE,SAAW,SAACC,GACV,IAAMJ,EAAOI,EAAEC,OAAOL,KACtB,EAAKM,UAAS,SAACC,GAAD,OAAgBA,EAAUP,GAAQI,EAAEC,OAAOG,U,EAG3DC,WAAa,SAACL,GACZA,EAAEM,iBACF,IACMC,EADe,EAAKd,MAAlBC,SACuBc,MAC7B,SAACC,GAAD,OAAUA,EAAKb,OAASI,EAAEC,OAAO,GAAGG,SAElCG,EACFG,MAAM,GAAD,OAAIH,EAAcX,KAAlB,6BAGP,EAAKM,UAAS,YAAiC,IAA9BR,EAA6B,EAA7BA,SAAUE,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC/B,OAAOH,EAASiB,KAAK,CAAEhB,GAAIiB,cAAUhB,OAAMC,cAE7C,EAAKgB,e,EAGPC,cAAgB,SAACC,GACf,EAAKb,UAAS,kBAAmB,CAC/BR,SADY,EAAGA,SACII,QAAO,SAACW,GACzB,OAAOA,EAAKd,KAAOoB,U,EAKzBF,WAAa,WACX,OAAO,EAAKX,UACV,SAACC,GAAD,MACe,CACXT,SAAS,YAAKS,EAAUT,UACxBI,OAAQ,GACRF,KAAM,GACNC,OAAQ,Q,4CAKhB,WAAU,IAAD,OACP,EAA2CmB,KAAKvB,MAAxCG,EAAR,EAAQA,KAAMF,EAAd,EAAcA,SAAUG,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,OAE1BmB,EAAmBnB,EAAOoB,cAC1BC,EAAkBzB,EAASI,QAAO,SAACsB,GAAD,OACtCA,EAAQxB,KAAKsB,cAAcG,SAASJ,MAGtC,OACE,qCACE,2CACA,uBAAMK,SAAUN,KAAKX,WAArB,UACE,yCAEE,uBACEkB,KAAK,OACL3B,KAAK,OACL4B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUX,KAAKjB,SACfK,MAAOR,OAGX,2CAEE,uBACE2B,KAAK,MACL3B,KAAK,SACL4B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRtB,MAAOP,EACP8B,SAAUX,KAAKjB,cAGnB,wBAAQwB,KAAK,SAAb,4BAEF,0CACA,0DAEE,uBACEA,KAAK,OACL3B,KAAK,SACLQ,MAAON,EACP6B,SAAUX,KAAKjB,cAGlBL,GACC,6BACGyB,EAAgBS,KAAI,gBAAGjC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,+BACE,iCACGD,EADH,KACWC,KAEX,wBAAQgC,QAAS,kBAAM,EAAKf,cAAcnB,IAA1C,sBAJOA,e,GAzGLmC,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f080ed06.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  getValue = (e) => {\n    const name = e.target.name;\n    this.setState((prevState) => (prevState[name] = e.target.value));\n  };\n\n  getContact = (e) => {\n    e.preventDefault();\n    const { contacts } = this.state;\n    const doubleContact = contacts.find(\n      (item) => item.name === e.target[0].value\n    );\n    if (doubleContact) {\n      alert(`${doubleContact.name} is already in contacts`);\n      return;\n    }\n    this.setState(({ contacts, name, number }) => {\n      return contacts.push({ id: uuidv4(), name, number });\n    });\n    this.resetState();\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((item) => {\n        return item.id !== contactId;\n      }),\n    }));\n  };\n\n  resetState = () => {\n    return this.setState(\n      (prevState) =>\n        (prevState = {\n          contacts: [...prevState.contacts],\n          filter: \"\",\n          name: \"\",\n          number: \"\",\n        })\n    );\n  };\n\n  render() {\n    const { name, contacts, number, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <form onSubmit={this.getContact}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.getValue}\n              value={name}\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={number}\n              onChange={this.getValue}\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n        <h2>Contacts</h2>\n        <label>\n          Find contacts by Name\n          <input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={this.getValue}\n          />\n        </label>\n        {contacts && (\n          <ul>\n            {visibleContacts.map(({ id, name, number }) => (\n              <li key={id}>\n                <span>\n                  {name}: {number}\n                </span>\n                <button onClick={() => this.deleteContact(id)}>Delete</button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}