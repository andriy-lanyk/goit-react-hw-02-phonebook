{"version":3,"sources":["App/App.js","index.js"],"names":["App","state","contacts","id","name","number","filter","getValue","e","target","value","setState","prevState","getContact","preventDefault","doubleContact","find","item","alert","push","shortid","generate","resetState","findContact","arrayOfContacts","toLowerCase","includes","deleteContact","console","log","this","onSubmit","type","pattern","title","required","onChange","map","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAoIeA,E,4MAhIbC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDC,OAAQ,GACRF,KAAM,GACNC,OAAQ,I,EAGVE,SAAW,SAACC,GACV,IAAMJ,EAAOI,EAAEC,OAAOL,KAChBM,EAAQF,EAAEC,OAAOC,MACvB,EAAKC,UAAS,SAACC,GAAD,OAAgBA,EAAUR,GAAQM,M,EAGlDG,WAAa,SAACL,GACZA,EAAEM,iBACF,IACMC,EADe,EAAKd,MAAlBC,SACuBc,MAC7B,SAACC,GAAD,OAAUA,EAAKb,OAASI,EAAEC,OAAO,GAAGC,SAElCK,EACFG,MAAM,GAAD,OAAIH,EAAcX,KAAlB,6BAGP,EAAKO,UAAS,YAAiC,IAA9BT,EAA6B,EAA7BA,SAAUE,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC/B,OAAOH,EAASiB,KAAK,CAAEhB,GAAIiB,IAAQC,WAAYjB,OAAMC,cAEvD,EAAKiB,e,EAGPC,YAAc,SAACf,GACb,IAAMJ,EAAOI,EAAEC,OAAOL,KAChBM,EAAQF,EAAEC,OAAOC,MACvB,EAAKC,UAAS,SAACC,GAAD,OAAgBA,EAAUR,GAAQM,KAChD,EAAKC,UAAS,SAACC,GACb,IAAMY,EAAe,YAAOZ,EAAUV,UACtCU,EAAUV,SAAWsB,EAAgBlB,QAAO,SAACW,GAAD,OAC1CA,EAAKb,KAAKqB,cAAcC,SAAShB,EAAMe,sB,EAK7CE,cAAgB,SAACnB,GACf,IAAMC,EAASD,EAAEC,OAAOL,KACxBwB,QAAQC,IAAI,WAAYpB,GACxB,EAAKE,UAAS,SAACC,GACbA,EAAUV,SAAWU,EAAUV,SAASI,QAAO,SAACW,GAC9C,OAAOA,EAAKd,KAAOM,QAGvBmB,QAAQC,IAAI,EAAK5B,MAAMC,W,EAGzBoB,WAAa,WACX,OAAO,EAAKX,UACV,SAACC,GAAD,MACe,CACXV,SAAS,YAAKU,EAAUV,UACxBI,OAAQ,GACRF,KAAM,GACNC,OAAQ,Q,4CAKhB,WAAU,IAAD,OACP,EAA2CyB,KAAK7B,MAAxCG,EAAR,EAAQA,KAAMF,EAAd,EAAcA,SAAUG,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,OAChC,OACE,qCACE,2CACA,uBAAMyB,SAAUD,KAAKjB,WAArB,UACE,yCAEE,uBACEmB,KAAK,OACL5B,KAAK,OACL6B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUN,KAAKvB,SACfG,MAAON,OAGX,2CAEE,uBACE4B,KAAK,MACL5B,KAAK,SACL6B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRzB,MAAOL,EACP+B,SAAUN,KAAKvB,cAGnB,wBAAQyB,KAAK,SAAb,4BAEF,0CACA,0DAEE,uBACEA,KAAK,OACL5B,KAAK,SACLM,MAAOJ,EACP8B,SAAUN,KAAKP,iBAGlBrB,GACC,6BACGA,EAASmC,KAAI,gBAAGlC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACGD,EADH,KACWC,EAAQ,IACjB,wBAAQD,KAAMD,EAAImC,QAAS,EAAKX,cAAhC,sBAFOxB,e,GAnHLoC,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e3932a28.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  getValue = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState((prevState) => (prevState[name] = value));\n  };\n\n  getContact = (e) => {\n    e.preventDefault();\n    const { contacts } = this.state;\n    const doubleContact = contacts.find(\n      (item) => item.name === e.target[0].value\n    );\n    if (doubleContact) {\n      alert(`${doubleContact.name} is already in contacts`);\n      return;\n    }\n    this.setState(({ contacts, name, number }) => {\n      return contacts.push({ id: shortid.generate(), name, number });\n    });\n    this.resetState();\n  };\n\n  findContact = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState((prevState) => (prevState[name] = value));\n    this.setState((prevState) => {\n      const arrayOfContacts = [...prevState.contacts];\n      prevState.contacts = arrayOfContacts.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n    });\n  };\n\n  deleteContact = (e) => {\n    const target = e.target.name;\n    console.log(\"target: \", target);\n    this.setState((prevState) => {\n      prevState.contacts = prevState.contacts.filter((item) => {\n        return item.id !== target;\n      });\n    });\n    console.log(this.state.contacts);\n  };\n\n  resetState = () => {\n    return this.setState(\n      (prevState) =>\n        (prevState = {\n          contacts: [...prevState.contacts],\n          filter: \"\",\n          name: \"\",\n          number: \"\",\n        })\n    );\n  };\n\n  render() {\n    const { name, contacts, number, filter } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <form onSubmit={this.getContact}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.getValue}\n              value={name}\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={number}\n              onChange={this.getValue}\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n        <h2>Contacts</h2>\n        <label>\n          Find contacts by Name\n          <input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={this.findContact}\n          />\n        </label>\n        {contacts && (\n          <ul>\n            {contacts.map(({ id, name, number }) => (\n              <li key={id}>\n                {name}: {number}{\" \"}\n                <button name={id} onClick={this.deleteContact}>\n                  Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}