{"version":3,"sources":["ContactForm/ContactForm.styles.js","ContactForm/ContactForm.js","ContactList/ContactListStyles.js","ContactList/ContactList.js","Filter/Filter.styles.js","Filter/Filter.js","App/App.styles.js","App/App.js","index.js"],"names":["Form","styled","form","Label","label","Btn","button","ContactForm","state","name","number","getValue","e","currentTarget","value","setState","handleChange","preventDefault","props","submit","reset","this","onSubmit","type","pattern","title","required","onChange","Component","ItemText","span","Item","li","ContactList","contacts","visibleContacts","getElement","map","i","id","onClick","Filter","change","filter","Container","div","App","getFilter","getContact","doubleContact","find","item","alert","uuidv4","deleteContact","contactId","resetState","prevState","normalizedFilter","toLowerCase","contact","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5c16145.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 20px;\n  border: 3px solid #212121;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin-bottom: 30px;\n  font-size: 20px;\n  font-weight: 800;\n`;\n\nconst Btn = styled.button`\n  width: 100px;\n  padding: 5px;\n  font-weight: 600;\n  background-color: #5d5dff;\n  border-radius: 5px;\n`;\n\nexport { Form, Label, Btn };\n","import React, { Component } from \"react\";\nimport { Form, Label, Btn } from \"./ContactForm.styles\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  getValue = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.props.submit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form onSubmit={this.handleChange}>\n        <Label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.getValue}\n            value={name}\n          />\n        </Label>\n        <Label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.getValue}\n          />\n        </Label>\n        <Btn type=\"submit\">Add contact</Btn>\n      </Form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nconst Btn = styled.button`\n  padding: 3px;\n  font-weight: 600;\n  background-color: #5d5dff;\n  border-radius: 5px;\n`;\n\nconst ItemText = styled.span`\n  margin-right: 30px;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  width: 350px;\n  font-size: 18px;\n`;\n\nexport { Btn, ItemText, Item };\n","import React from \"react\";\nimport { Btn, ItemText, Item } from \"./ContactListStyles\";\n\nconst ContactList = ({ contacts, visibleContacts, getElement }) => {\n  return (\n    contacts && (\n      <ul>\n        {visibleContacts.map(({ id, name, number }, i) => (\n          <Item key={id}>\n            <ItemText>\n              {`${i + 1})    `}\n              {name}: {number}\n            </ItemText>\n            <Btn type=\"button\" onClick={() => getElement(id)}>\n              Delete\n            </Btn>\n          </Item>\n        ))}\n      </ul>\n    )\n  );\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  width: 380px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n","import React from \"react\";\nimport { Label } from \"./Filter.styles\";\n\nconst Filter = ({ change, filter }) => {\n  function getFilterValue(e) {\n    const { value } = e.currentTarget;\n    change(value);\n  }\n\n  return (\n    <Label>\n      Find contacts by Name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={getFilterValue}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"../ContactForm\";\nimport ContactList from \"../ContactList\";\nimport Filter from \"../Filter\";\nimport { Container } from \"./App.styles\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  getFilter = (value) => {\n    this.setState({ filter: value });\n  };\n\n  getContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const doubleContact = contacts.find((item) => item.name === name);\n    if (doubleContact) {\n      alert(`${doubleContact.name} is already in contacts`);\n      return;\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, { id: uuidv4(), name, number }],\n    }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((item) => {\n        return item.id !== contactId;\n      }),\n    }));\n  };\n\n  resetState = () => {\n    return this.setState(\n      (prevState) =>\n        (prevState = {\n          contacts: [...prevState.contacts],\n          filter: \"\",\n        })\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm submit={this.getContact} />\n        <h2>Contacts</h2>\n        <Filter change={this.getFilter} filter={filter} />\n        <ContactList\n          contacts={contacts}\n          visibleContacts={visibleContacts}\n          getElement={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}